extends header

block main
    .main.layui-clear
        .warp
                div.conten-detail
                    div(v-cloak)
                            h1 {{vtopic.title}}
                            .topic-tip
                            .topic-about
                                    a.topic-author-avatar(href='/u/336')
                                        img(v-bind:src="'/avatar/uavatar/'+vauthor.avatar" alt='纸飞机')
                                    span.topic-about-view
                                        .author-name {{vauthor.name}}
                                        cite.cite
                                            span
                                                i(v-bind:class="getLevel(vauthor.score).lv1").iconfont
                                            span.topic-create 发布于: {{getLocalDate(vtopic.create_at)}}
                                            span.topic-update 最后一次更新: {{getCurrentDate(vtopic.update_at)}}
                                        em  暗暗
                            div.topic-content
                               !=topic.content

                            .common-header
                                p 共X人发表了评论
                            .topic-common-list
                                    .topic-common(v-for="item in vreply")
                                        .author-content
                                           a.topic-common-avatar(v-bind:href="'/user/'+item.reply_id")
                                             img(v-bind:src="'/avatar/uavatar/'+item.reply_id.avatar", alt='纸飞机')
                                        span(v-bind:id='item._id').user-info
                                           .user-name
                                                a(v-bind:href="'/user/'+item.reply_id._id") {{item.reply_id.name}}
                                           span.vip
                                               i.iconfont.user-level-1.icon-lv1
                                           span.reply-time 在{{getCurrentDate(item.create_at)}}发布
                                           span( v-bind:class="{'topic-ups-active':isUpsActive(item._id)}" onselectstart="return false" class="reply-ups")
                                                i.iconfont.icon-zan.common-icon
                                                em {{item.ups_count}}
                                           span.reply-at
                                                i.iconfont.icon-huifu2.common-icon
                                           span.user-medal 勋章
                                        a(v-if ="item.author_id" v-bind:href="'#'+item.toreply_id").topic-reply-at  @{{item.author_id.name}}
                                        p.reply-content {{item.content}}

                                    #page
                                    .editor-seat
                                        .layui-form.layui-form-pane.reply-editor.reply-editor
                                                    textarea#content( name='content',style='display: none;height: 260px;' )
                                                    .layui-form-item
                                                        button(v-on:click="postReply").layui-btn 立即发布
                div(v-cloak)
                    .edge
                        h3 热门话题
                        .edge-content
                            .edge-content-text
                                ul
                                   li(v-for="firelist in vedge.fireTopic")
                                       a(v-bind:href="'/topic/get/'+firelist._id") {{firelist.title}}
                        h3 无人回复
                        .edge-content
                            .edge-content-text
                                ul
                                    li(v-for="zerolist in vedge.zeroReply")
                                        a(v-bind:href="'/topic/get/'+zerolist._id") {{zerolist.title}}


    script.
        var topic=!{JSON.stringify(topic)};
        var reply=!{JSON.stringify(reply)};
        var edge=!{JSON.stringify(edge)};
        $(function () {
            var vue = new Vue({
                el: '.warp',
                data: {
                    vreply: reply.topic,
                    vtopic: topic,
                    vups: reply.ups,
                    vauthor: topic.author_id,
                    vedge: edge
                },
                // 在 `methods` 对象中定义方法
                methods: {
                    getLocalDate(date){
                        var date = new Date(date);
                        var string = date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日';
                        return string;

                    },
                    postReply(){
                        //显示最后评论
                        var vreply = this.vreply;
                        var a = {
                            _id: 'mine',
                            reply_id: {
                                name: '我'
                            },
                            create_at: 1,
                            content: 1

                        }
                        this.vreply.push(a)
                        console.log(editor.$txt.formatText())
                        $.ajax({
                            type: 'POST',
                            url: '/reply/post',
                            data: {
                                authorid: this.vauthor._id,
                                topicid: this.vtopic._id,
                                content: editor.$txt.formatText(),
                            },
                            success: function (data) {

                            },
                            error: function (data) {

                            },
                            dataType: 'json'
                        });
                    },
                    isUpsActive(replyid){
                        let upreply = this.vups;
                        if (upreply.indexOf(replyid) >= 0) {
                            return true
                        } else {
                            return false
                        }

                    },
                    getLevel (score){
                        var lv = {
                            lv1: 'user-level-1 icon-lv1'
                        }
                        if (score >= 0 && score <= 100) {
                            return lv;
                        }
                    },
                    getCurrentDate(date){
                        var date = Date.parse(new Date(date));
                        var minute = 1000 * 60;
                        var hour = minute * 60;
                        var day = hour * 24;
                        var halfamonth = day * 15;
                        var month = day * 30;
                        var now = new Date().getTime();
                        var diffValue = now - date;
                        if (diffValue < 0) {
                            return;
                        }
                        var monthC = diffValue / month;
                        var weekC = diffValue / (7 * day);
                        var dayC = diffValue / day;
                        var hourC = diffValue / hour;
                        var minC = diffValue / minute;
                        if (monthC >= 1) {
                            result = "" + parseInt(monthC) + "月前";
                        }
                        else if (weekC >= 1) {
                            result = "" + parseInt(weekC) + "周前";
                        }
                        else if (dayC >= 1) {
                            result = "" + parseInt(dayC) + "天前";
                        }
                        else if (hourC >= 1) {
                            result = "" + parseInt(hourC) + "小时前";
                        }
                        else if (minC >= 1) {
                            result = "" + parseInt(minC) + "分钟前";
                        } else
                            result = "刚刚";
                        return result;
                    }
                }
            })
            layui.use(['laypage', 'layer'], function () {
                var laypage = layui.laypage
                        , layer = layui.layer;
                laypage({
                    cont: 'page'
                    , pages: 100 //总页数
                    , groups: 5 //连续显示分页数
                });
            });


            function ups() {
                var state = false
                $(".reply-ups").click(function () {
                    var ups = $(this).attr("class").indexOf("topic-ups-active");
                    (ups > 0) ? ( state = true) : (state = false)
                    $(this).toggleClass("topic-ups-active");
                    if (state) {
                        state = false
                        var num = $(this).children("em").text();
                        $(this).children("em").text(parseInt(num) - 1);
                    } else {
                        state = true
                        var num = $(this).children("em").text();
                        $(this).children("em").text(parseInt(num) + 1);
                    }
                    var replyID = $(this).parent().attr("id");
                    $.ajax({
                        type: 'GET',
                        url: '/reply/ups' + '?replyid=' + replyID,
                        success: function (data) {

                        },
                        error: function (data) {

                        },
                        dataType: 'json'
                    });
                });
            }

            ups();
            toReply();
            function toReply(){
                $('.reply-at').bind('click', function () {
                    $(this).unbind('click')
                    var replyid = $(this).parent().attr("id")
                    $(this).parent().parent().after(
                            "<div class='new-editor'><textarea id=newcontent" + replyid + " style='height:200px'></textarea><button  class='layui-btn new-editor-bottom'>提交回复</button></div>"
                    )
                    var m = $(this).parent().parent().next().children(".layui-btn.new-editor-bottom").click(function () {
                        $.ajax({
                            type: 'POST',
                            url: '/toreply/post',
                            data: {
                                topicid: topic._id,
                                replyid: replyid,
                                content: editorNew.$txt.formatText()
                            },
                            success: function (data) {

                            },
                            error: function (data) {

                            },
                            dataType: 'json'
                        });
                    })
                    var newcontentID = "newcontent" + replyid.toString();
                    if (editorNew != undefined) {
                        editorNew.destroy();
                    }
                    var editorNew = new wangEditor(newcontentID);

                    editorNew.config.menus = [
                        'source',
                        '|',     // '|' 是菜单组的分割线
                        'bold',
                        'underline',
                        'italic',
                        'strikethrough',
                        'eraser',
                        'forecolor',
                        'bgcolor',
                        'img',
                        'video',
                        'link',
                        'unlink',
                        'table'
                    ];
                    editorNew.config.uploadImgUrl = '/uploads';
                    // 设置 headers（举例）
                    editorNew.config.uploadHeaders = {
                        'Accept': 'text/x-json'
                    };
                    // 隐藏掉插入网络图片功能。该配置，只有在你正确配置了图片上传功能之后才可用。
                    editorNew.config.hideLinkImg = false;
                    editorNew.config.printLog = false;
                    editorNew.config.uploadImgFileName = 'file'
                    editorNew.create();
                })
            }
            var editor = new wangEditor('content');
            editor.config.mapAk = 'ZwDq5sGhrTKGjLVPkoWrRiut0PjrqgqR';
            editor.config.uploadImgUrl = '/uploads';
            // 设置 headers（举例）
            editor.config.uploadHeaders = {
                'Accept': 'text/x-json'
            };
            // 隐藏掉插入网络图片功能。该配置，只有在你正确配置了图片上传功能之后才可用。
            editor.config.hideLinkImg = false;
            editor.config.printLog = false;
            editor.config.uploadImgFileName = 'file'
            editor.create();
            var height = document.body.scrollHeight;
            $('body').css('height', height);
        });
















